#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗафиксироватьОтветыРаунда(ОтветыКоманды) Экспорт
	
	Если ОтветыКоманды.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru='Не переданы ответы команды для фиксации'");
	КонецЕсли;
	
	Раунд = ОтветыКоманды[0].Раунд;
	Квиз = ОтветыКоманды[0].Квиз;
	Команда = ОтветыКоманды[0].Команда;
	
	НачатьТранзакцию();
	Попытка
		
		АктивныйРаунд = УправлениеКвизами.АктивныйРаунд(Квиз);
		Если Раунд <> АктивныйРаунд Тогда
			ВызватьИсключение НСтр("ru='Ответы не приняты. Раунд не активен'")
		КонецЕсли;
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Квиз.Установить(Квиз);
		НаборЗаписей.Отбор.Команда.Установить(Команда);
		НаборЗаписей.Отбор.Раунд.Установить(Раунд);
		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() Тогда
			ТекстОшибки = НСтр("ru='Ответы были приняты ранее'");
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		Для Каждого ИнформацияОбОтвете Из ОтветыКоманды Цикл
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ИнформацияОбОтвете);
			ИнформацияОВопросе = УправлениеКвизами.ИнформацияОВопросе(ИнформацияОбОтвете.Вопрос);
			Запись.ОтветПринят = Запись.Ответ = ИнформацияОВопросе.Ответ;
			Запись.КоличествоБаллов = ИнформацияОВопросе.КоличествоБаллов;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Ответы успешно приняты.'"));
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		ОшибкаВЖурналРегистрации = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		ЗаписьЖурналаРегистрации(НСтр("ru='Фиксация ответов команды'", "ru"), УровеньЖурналаРегистрации.Ошибка, , , ОшибкаВЖурналРегистрации);
		
		ОшибкаДляПользователя = ОбработкаОшибок.СообщениеОбОшибкеДляПользователя(ИнформацияОбОшибке);
		ВызватьИсключение ОшибкаДляПользователя;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ПринятьОтвет(ОписаниеОтвета) Экспорт
	
	ОтветПринят = Истина;
	ИзменитьСостояниеОтвета(ОписаниеОтвета, ОтветПринят);
	
КонецПроцедуры

Процедура ОтозватьОтвет(ОписаниеОтвета) Экспорт
	
	ОтветПринят = Ложь;
	ИзменитьСостояниеОтвета(ОписаниеОтвета, ОтветПринят);
	
КонецПроцедуры

Функция ОтветБылОтправленКомандой(ОписаниеОтвета) Экспорт
	
	ОтветКомандыЗафиксирован = Ложь;
	
	НачатьТранзакцию();
	Попытка
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Квиз.Установить(ОписаниеОтвета.Квиз);
		НаборЗаписей.Отбор.Команда.Установить(ОписаниеОтвета.Команда);
		НаборЗаписей.Отбор.Раунд.Установить(ОписаниеОтвета.Раунд);
		НаборЗаписей.Отбор.Вопрос.Установить(ОписаниеОтвета.Вопрос);
		
		ЗаблокироватьДляЧтения(ОписаниеОтвета);
		
		НаборЗаписей.Прочитать();
		
		ОтветКомандыЗафиксирован = НаборЗаписей.Количество();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		ОшибкаВЖурналРегистрации = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		ЗаписьЖурналаРегистрации(НСтр("ru='Информация об ответе'", "ru"), УровеньЖурналаРегистрации.Ошибка, , , ОшибкаВЖурналРегистрации);
		
		ОшибкаДляПользователя = ОбработкаОшибок.СообщениеОбОшибкеДляПользователя(ИнформацияОбОшибке);
		ВызватьИсключение ОшибкаДляПользователя;
		
	КонецПопытки;
	
	Возврат ОтветКомандыЗафиксирован;
	
КонецФункции

Функция ИнформацияПоОтветамИерархически(Квиз) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиКвиза.Раунд КАК Раунд,
	|	НастройкиКвиза.Вопрос КАК Вопрос,
	|	НастройкиКвиза.Команда КАК Команда,
	|	НастройкиКвиза.ЭталонныйОтвет КАК ЭталонныйОтвет,
	|	ЕСТЬNULL(ОтветыКоманд.Ответ, """") КАК Ответ,
	|	ЕСТЬNULL(ОтветыКоманд.ОтветПринят, ЛОЖЬ) КАК ОтветПринят
	|ИЗ
	|	РегистрСведений.НастройкиКвиза КАК НастройкиКвиза
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыКоманд КАК ОтветыКоманд
	|		ПО НастройкиКвиза.Квиз = ОтветыКоманд.Квиз
	|			И НастройкиКвиза.Команда = ОтветыКоманд.Команда
	|			И НастройкиКвиза.Раунд = ОтветыКоманд.Раунд
	|			И НастройкиКвиза.Вопрос = ОтветыКоманд.Вопрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	НастройкиКвиза.Раунд.ПорядковыйНомер,
	|	Вопрос
	|ИТОГИ ПО
	|	Раунд";
	
	Запрос.УстановитьПараметр("Квиз", Квиз);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИзменитьСостояниеОтвета(ОписаниеОтвета, ОтветПринят)

	НачатьТранзакцию();
	Попытка
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Квиз.Установить(ОписаниеОтвета.Квиз);
		НаборЗаписей.Отбор.Команда.Установить(ОписаниеОтвета.Команда);
		НаборЗаписей.Отбор.Раунд.Установить(ОписаниеОтвета.Раунд);
		НаборЗаписей.Отбор.Вопрос.Установить(ОписаниеОтвета.Вопрос);
		
		ЗаблокироватьДляЗаписи(ОписаниеОтвета);
		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() Тогда
			Запись = НаборЗаписей[0];
			Запись.ОтветПринят = ОтветПринят;
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
		Если ОтветПринят Тогда
				ТекстСообщения = НСтр("ru='Ответ зафиксирован'");
			Иначе
				ТекстСообщения = НСтр("ru='Ответ отозван'");
		КонецЕсли;
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		ЗафиксироватьТранзакцию();

	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		ОшибкаВЖурналРегистрации = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации(ОтветПринят), УровеньЖурналаРегистрации.Ошибка, , , ОшибкаВЖурналРегистрации);
		
		ОшибкаДляПользователя = ОбработкаОшибок.СообщениеОбОшибкеДляПользователя(ИнформацияОбОшибке);
		ВызватьИсключение ОшибкаДляПользователя;
		
	КонецПопытки;

КонецПроцедуры

Процедура ЗаблокироватьДляЗаписи(ОписаниеОтвета)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОтветыКоманд");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Квиз", ОписаниеОтвета.Квиз);
	ЭлементБлокировки.УстановитьЗначение("Команда", ОписаниеОтвета.Команда);
	ЭлементБлокировки.УстановитьЗначение("Раунд", ОписаниеОтвета.Раунд);
	ЭлементБлокировки.УстановитьЗначение("Вопрос", ОписаниеОтвета.Вопрос);
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаблокироватьДляЧтения(ОписаниеОтвета)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОтветыКоманд");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	ЭлементБлокировки.УстановитьЗначение("Квиз", ОписаниеОтвета.Квиз);
	ЭлементБлокировки.УстановитьЗначение("Команда", ОписаниеОтвета.Команда);
	ЭлементБлокировки.УстановитьЗначение("Раунд", ОписаниеОтвета.Раунд);
	ЭлементБлокировки.УстановитьЗначение("Вопрос", ОписаниеОтвета.Вопрос);
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Функция ИмяСобытияЖурналаРегистрации(ЭтоПринятиеОтвета)
	
	ИменаСобытий = Новый Соответствие;
	ИменаСобытий.Вставить(Истина, НСтр("ru='Принятие ответа'"));
	ИменаСобытий.Вставить(Ложь, НСтр("ru='Отзыв ответа'"));
	
	Возврат ИменаСобытий[ЭтоПринятиеОтвета];
	
КонецФункции

#КонецОбласти

#КонецЕсли
