#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура АктивироватьРаунд(Квиз, Раунд) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Квиз.Установить(Квиз);
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.АктивныеРаунды");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Квиз", Квиз);
		Блокировка.Заблокировать();
		
		Запись = НаборЗаписей.Добавить();
		Запись.Квиз = Квиз;
		Запись.Раунд = Раунд;
		
		НаборЗаписей.Записать();
		
		ТекстСообщения = СтрШаблон(НСтр("ru='Раунд ""%1"" активирован'"), Раунд);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		ОшибкаВЖурналРегистрации = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		ЗаписьЖурналаРегистрации(НСтр("ru='Активация раунда'", "ru"), УровеньЖурналаРегистрации.Ошибка, , , ОшибкаВЖурналРегистрации);
		
		ОшибкаДляПользователя = ОбработкаОшибок.СообщениеОбОшибкеДляПользователя(ИнформацияОбОшибке);
		ВызватьИсключение ОшибкаДляПользователя;
		
	КонецПопытки;

КонецПроцедуры

Функция АктивныйРаундКвиза(Квиз) Экспорт
	
	Если ТранзакцияАктивна() Тогда
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.АктивныеРаунды");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		ЭлементБлокировки.УстановитьЗначение("Квиз", Квиз);
		Блокировка.Заблокировать();
		
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктивныеРаунды.Раунд КАК Раунд
	|ИЗ
	|	РегистрСведений.АктивныеРаунды КАК АктивныеРаунды
	|ГДЕ
	|	АктивныеРаунды.Квиз = &Квиз";
	
	Запрос.УстановитьПараметр("Квиз", Квиз);
	РезультатЗапроса = Запрос.Выполнить();
	
	Раунд = "";
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Раунд = Выборка.Раунд;
	КонецЕсли;
	
	Возврат Раунд;

КонецФункции

// Возвращаемое значение
//   * ТаблицаЗначений
//     * Раунд - ОпределяемыйТип.Раунд
//     * Активен - Булево
//
Функция ИнформацияПоРаундамКвиза(Квиз) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиКвиза.Раунд КАК Раунд,
	|	АктивныеРаунды.Раунд ЕСТЬ НЕ NULL  КАК Активен
	|ИЗ
	|	РегистрСведений.НастройкиКвиза КАК НастройкиКвиза
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АктивныеРаунды КАК АктивныеРаунды
	|		ПО НастройкиКвиза.Квиз = АктивныеРаунды.Квиз
	|			И НастройкиКвиза.Раунд = АктивныеРаунды.Раунд
	|
	|СГРУППИРОВАТЬ ПО
	|	АктивныеРаунды.Раунд ЕСТЬ НЕ NULL ,
	|	НастройкиКвиза.Раунд
	|
	|УПОРЯДОЧИТЬ ПО
	|	Раунд";
	
	Запрос.УстановитьПараметр("Квиз", Квиз);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗавершитьКвиз(Квиз) Экспорт
	
	НачатьТранзакцию();
	Попытка
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Квиз.Установить(Квиз);
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.АктивныеРаунды");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Квиз", Квиз);
		Блокировка.Заблокировать();
		
		НаборЗаписей.Записать();
		
		ТекстСообщения = СтрШаблон(НСтр("ru='Квиз ""%1"" завершен'"), Квиз);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		
		ОшибкаВЖурналРегистрации = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		ЗаписьЖурналаРегистрации(НСтр("ru='Завершение квиза'", "ru"), УровеньЖурналаРегистрации.Ошибка, , , ОшибкаВЖурналРегистрации);
		
		ОшибкаДляПользователя = ОбработкаОшибок.СообщениеОбОшибкеДляПользователя(ИнформацияОбОшибке);
		
		ВызватьИсключение ОшибкаДляПользователя;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

